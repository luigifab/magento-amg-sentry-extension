diff --git a/web/app/code/core/Mage/Core/Model/App.php b/web/app/code/core/Mage/Core/Model/App.php
index 83b6a98bd..78196fb12 100644
--- a/web/app/code/core/Mage/Core/Model/App.php
+++ b/web/app/code/core/Mage/Core/Model/App.php
@@ -522,9 +522,17 @@ class Mage_Core_Model_App
             $this->_checkCookieStore($scopeType);
             $this->_checkGetStore($scopeType);
         }
-        $this->_useSessionInUrl = $this->getStore()->getConfig(
-            Mage_Core_Model_Session_Abstract::XML_PATH_USE_FRONTEND_SID
-        );
+
+        // https://github.com/luigifab/openmage-sentry
+        $store = $this->getStore();
+        global $sentry;
+        if (!$sentry) {
+            $sentry = new Luigifab_Sentry_Model_Client();
+            $sentry->initHandler($store);
+        }
+
+        $this->_useSessionInUrl = $store->getConfig(Mage_Core_Model_Session_Abstract::XML_PATH_USE_FRONTEND_SID);
+
         return $this;
     }
 
diff --git a/web/app/Mage.php b/web/app/Mage.php
index 83b6a98bd..78196fb12 100644
--- a/web/app/Mage.php
+++ b/web/app/Mage.php
@@ -948,7 +948,15 @@ final class Mage, Mage::logException()
             return;
         }
         $file = self::getStoreConfig('dev/log/exception_file');
-        self::log("\n" . $e->__toString(), Zend_Log::ERR, $file);
+        self::log(
+            (self::$_isDeveloperMode ? 'isDeveloperMode:on ' : 'isDeveloperMode:off ') .
+            (self::getStoreConfigFlag('dev/sentry/active') ? 'sentry:on' : 'sentry:off') .
+                "\n" . $e->__toString(),
+            Zend_Log::ERR, $file);
+        if (!self::$_isDeveloperMode) {
+            global $sentry;
+            $sentry->captureException($e, null, ['source' => 'mage:logException']);
+        }
     }
 
     /**
diff --git a/web/app/code/core/Mage/Api/Model/Server/Handler/Abstract.php b/web/app/code/core/Mage/Api/Model/Server/Handler/Abstract.php
index 83b6a98bd..78196fb12 100644
--- a/web/app/code/core/Mage/Api/Model/Server/Handler/Abstract.php
+++ b/web/app/code/core/Mage/Api/Model/Server/Handler/Abstract.php
@@ -35,9 +35,15 @@ abstract class Mage_Api_Model_Server_Handler_Abstract
      * @param string $errorFile
      * @return bool
      */
-    public function handlePhpError($errorCode, $errorMessage, $errorFile)
+    public function handlePhpError($errorCode, $errorMessage, $errorFile, $errLine, $context = [])
     {
-        Mage::log($errorMessage . $errorFile);
+        global $sentry;
+        if ($sentry) {
+            $sentry->handleError($errorCode, $errorMessage, $errorFile, $errLine, $context);
+        }
+        else {
+            Mage::log($errorMessage . '  in ' . $errorFile . ' on line ' . $errLine);
+        }
         if (in_array($errorCode, [E_ERROR, E_USER_ERROR, E_RECOVERABLE_ERROR])) {
             $this->_fault('internal');
         }
